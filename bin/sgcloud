#!/usr/bin/env node

'use strict'

const commander = require('commander')
const semver = require('semver')
const updateNotifier = require('update-notifier')
const logger = require('../lib/logger')

// set version (includes version command)
const pkg = require('../package.json')

// check node version
if (!semver.satisfies(process.version, pkg.engines.node)) {
  console.error(`You have an outdated node version (${process.version}). Please upgrade to the newest version`)
  process.exit(1)
}

const notifier = updateNotifier({pkg, updateCheckInterval: 0})
notifier.notify()

if (notifier.update) {
  process.exit(0)
}

commander.version(pkg.version)

// load all custom actions
const actions = require('../')
Object.keys(actions).forEach(a => new actions[a]().register(commander))

// activate argument parsing
commander.parse(process.argv)

// undefined if no cmd is given on cli, object if a cmd was found, string if not
const executedCommand = commander.args.pop()
if (typeof executedCommand === 'string') logger.error(`Unknonwn command ${commander.args.join(' ')} ${executedCommand}`)
if (!executedCommand || typeof executedCommand === 'string') commander.help()
